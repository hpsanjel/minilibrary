generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       Int           @id @default(autoincrement())
  membershipNumber         String?       @unique
  name                     String?
  email                    String        @unique
  password                 String
  phone                    String?
  city                     String?
  postalCode               String?
  address                  String?
  role                     Role          @default(STUDENT)
  verifiedUser             String        @default("No")
  verificationToken        String?
  verificationTokenExpires DateTime?     @db.Timestamp(6)
  transactions             Transaction[]
  finePayments             FinePayment[]
}

model Book {
  id           Int           @id @default(autoincrement())
  title        String
  author       String
  isbn         String?
  copies       Int           @default(1)
  available    Boolean       @default(true)
  coverUrl     String?
  transactions Transaction[]
}

model Transaction {
  id          Int           @id @default(autoincrement())
  userId      Int
  bookId      Int
  returned    Boolean       @default(false)
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  deadline    DateTime?     @db.Timestamp(6)
  fine        Int           @default(0)
  condition   String?
  returnNotes String?
  returnedAt  DateTime?     @db.Timestamp(6)
  book        Book          @relation(fields: [bookId], references: [id])
  user        User          @relation(fields: [userId], references: [id])
  finePayments FinePayment[]
}

model FinePayment {
  id            Int         @id @default(autoincrement())
  transactionId Int
  userId        Int
  amount        Int         // Amount paid in øre (1 NOK = 100 øre)
  paidAt        DateTime    @default(now()) @db.Timestamp(6)
  processedBy   String?     // Admin who processed the payment
  notes         String?     // Optional payment notes
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STUDENT
}
